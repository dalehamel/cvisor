#!/bin/sh

CONTAINER_NAME="$(basename $(dirname ${BASH_SOURCE[0]}))"
CONTAINER_OUTPUT="/u/containers/$CONTAINER_NAME"
CONTAINER_SOURCE=

# Embed into an initramfs
DO_EMBED=true

# Build an ISO for testing purposes
DO_GENERATE_ISO=true

DISTRO=trusty

PROFILE=ubuntu

network_packages="network-manager iproute2 bind9-host iputils-ping ifupdown" # not sure what to do here

# Sets up the default packages to install
PACKAGES="openssh-server,initramfs-tools,live-boot,lvm2"

# Extra packages to be installed after debootstrap
EXTRA_PACKAGES="vim ${network_packages}"

EXCLUDE_PATTERN=()

# Packages to blacklist during debootstrap
BLACKLIST_PACKAGES=""

KERNEL_ARGS="installtodisk"

customize(){
  script_path="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/install.sh" 
  cp ${script_path} "${CONTAINER_HOME}/${CONTAINER_NAME}/rootfs/install.sh"
  cexec chmod +x "/install.sh"
  cexec apt-get install -y linux-generic-lts-vivid

cat > "${CONTAINER_HOME}/${CONTAINER_NAME}/rootfs/etc/rc.local" << EOF
#!/bin/sh -e

# Fetch and run script at onboot_script_url if given
if [ -n "\$(onboot_script_url= /proc/cmdline)" ];then

  # Read the script URL from /proc/cmdline
  url_param=$(grep -o 'onboot_script_url=\S*\s' /proc/cmdline)
  url=$(${url_param#onboot_script_url=})

  curl $url > /onboot_script
  chmod +x /onboot_script

  /onboot_script 2>&1 > /var/log/onboot_script.log

fi
exit 0
EOF
  cexec chmod +x "/etc/rc.local"

}
